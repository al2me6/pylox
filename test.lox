fun hello() {
    print "hello world";
}

fun hello_ret() {
    return "hello world";
}

fun branching_ret(cond) {
    return cond > 2 ? "Yes" : "No";
}

fun recursive_count(max) {
    if (max > 1) {
        print recursive_count(max - 1);
    }
    return max;
}

fun factorial(n) {
    if (n <= 1) return 1;
    return n * factorial(n - 1);
}

fun fib(n) {
    if (n < 2) return n;
    return fib(n - 2) + fib(n - 1);
}

fun call_another_func(cond) {
    return branching_ret(cond);
}

hello();
print hello_ret();
print branching_ret(3);
print branching_ret(-2.5);
recursive_count(4);
print call_another_func(-3);
print "";

for (var i = 0; i <= 25; i = i + 1) {
    var fib_res = fib(i);
    var fact_res = factorial(i);
    print i;
    print "fib:";
    print fib_res;
    print "fact:";
    print fact_res;
    print "";
}
